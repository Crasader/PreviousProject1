#include "PlayMenu.h"

#include "Rules.h"
#include "MahjongEvent.h"

bool PlayMenu::init()
{
	Menu* menu = Menu::create();

	// 碰杠胡的按钮
	//controler = MahjongControler::getInstance();

	Size size = Director::getInstance()->getWinSize();

	peng = MenuItemImage::create("menu_peng.png", "menu_peng.png", CC_CALLBACK_1(PlayMenu::pengCallback, this));
	peng->setPosition(200, 100);
	peng->setVisible(false);
	
	gang = MenuItemImage::create("menu_gang.png", "menu_gang.png", CC_CALLBACK_1(PlayMenu::gangCallback, this));
	gang->setPosition(200, 100);
	gang->setVisible(false);

	hu = MenuItemImage::create("menu_hu.png", "menu_hu.png", CC_CALLBACK_1(PlayMenu::ziMoCallback, this));
	hu->setPosition(200, 100);
	hu->setVisible(false);

	qi = MenuItemImage::create("menu_qi.png", "menu_qi.png", CC_CALLBACK_1(PlayMenu::qiPengCallback, this));
	qi->setPosition(200, -50);
	qi->setVisible(false);
	
	menu->addChild(peng);
	menu->addChild(gang);
	menu->addChild(hu);
	menu->addChild(qi);
	//menu->setPosition(size.width/2, size.height/2);

	// 发好牌的按钮
	MenuItemImage* pickBtn = MenuItemImage::create("pickBtn_0.png", "pickBtn_1.png", CC_CALLBACK_1(PlayMenu::dealBtnCallBack, this));
	pickBtn->setPosition(100, -50);
	menu->addChild(pickBtn);

	MenuItemImage* pickGoodBtnLight = MenuItemImage::create("pickGoodBtn_light.png", "pickGoodBtn_light.png");
	pickGoodBtnLight->setPosition(-100, -50);
	menu->addChild(pickGoodBtnLight);
	MenuItemImage* pickGoodBtn = MenuItemImage::create("pickGoodBtn_0.png", "pickGoodBtn_1.png", CC_CALLBACK_1(PlayMenu::dealGoodBtnCallBack, this));
	pickGoodBtn->setPosition(-100, -50);
	menu->addChild(pickGoodBtn);

	this->addChild(menu);
	return true;
}

void PlayMenu::ShowPengButton()
{
	peng->setVisible(true);

	qi->setVisible(true);
}

void PlayMenu::ShowAnGangButton()
{
	gang->setVisible(true);
	gang->setCallback(CC_CALLBACK_1(PlayMenu::anGangCallback, this));

	qi->setVisible(true);
}

void PlayMenu::ShowGangButton()
{
	//controler->currentPlayer = player;
	gang->setVisible(true);
	gang->setCallback(CC_CALLBACK_1(PlayMenu::gangCallback, this));

	qi->setVisible(true);
}

void PlayMenu::ShowPengAndGang()
{
	//controler->currentPlayer = player;
	peng->setVisible(true);
	gang->setCallback(CC_CALLBACK_1(PlayMenu::gangCallback, this));
	gang->setVisible(true);
	qi->setVisible(true);
}

void PlayMenu::ShowZiMoButton()
{
	hu->setVisible(true);	// hu
	hu->setCallback(CC_CALLBACK_1(PlayMenu::ziMoCallback, this));

	qi->setVisible(true);
	qi->setCallback(CC_CALLBACK_1(PlayMenu::qiZiMoHuCallback, this));
}

void PlayMenu::ShowDianPaoButton()
{
	hu->setVisible(true);	// hu
	hu->setCallback(CC_CALLBACK_1(PlayMenu::dianPaoCallback, this));

	qi->setVisible(true);
	qi->setCallback(CC_CALLBACK_1(PlayMenu::qiDianPaoCallback, this));
}

void PlayMenu::hide()
{
	peng->setVisible(false);
	gang->setVisible(false);
	hu->setVisible(false);
	qi->setVisible(false);
}


//-------------------------------------- 发牌回调 ------------------------------------------
void PlayMenu::dealGoodBtnCallBack(CCObject* pSender)
{
	CCLOG("");
	CCLOG("-----------------------");
	CCLOG("- Btn : Deal Good");
	player->set_isPickGood(true);
	auto s = getChildren();
	s.at(0)->getChildren().at(4)->setVisible(false);
	s.at(0)->getChildren().at(5)->setVisible(false);
	s.at(0)->getChildren().at(6)->setVisible(false);
	dispatchMahjongEvent(DEALCARDS, NULL);
}
void PlayMenu::dealBtnCallBack(CCObject* pSender)
{
	CCLOG("");
	CCLOG("-----------------------");
	CCLOG("- Btn : Deal");
	auto s = getChildren();
	s.at(0)->getChildren().at(4)->setVisible(false);
	s.at(0)->getChildren().at(5)->setVisible(false);
	s.at(0)->getChildren().at(6)->setVisible(false);
	dispatchMahjongEvent(DEALCARDS, NULL);
}

//-------------------------------------- 碰杠胡回调 ------------------------------------------
void PlayMenu::pengCallback(Ref* pSender)		// 喷
{
	CCLOG("- Btn : peng");
	hide();
	player->peng();
}
void PlayMenu::qiPengCallback(Ref* pSender)
{
	CCLOG("- Btn : qiPeng");
	hide();
	dispatchMahjongEvent(QI_RETURN_BEFORE, NULL);
}


void PlayMenu::gangCallback(Ref* pSender)		// 杠
{
	CCLOG("- Btn : gang");
	hide();
	player->gang();
}
void PlayMenu::qiGangCallback(Ref* pSender)
{
	CCLOG("- Btn : qiGang");
	hide();
	dispatchMahjongEvent(QI_RETURN_BEFORE, NULL);
}


void PlayMenu::anGangCallback(Ref* pSender)	// 暗杠
{
	CCLOG("- Btn : kaiGang");
	hide();
	player->kaiGang(false);
}
void PlayMenu::qiAnGangCallback(Ref* pSender)
{
	CCLOG("- Btn : qiAnGang");
	hide();
	player->operaPlay();
}


void PlayMenu::ziMoCallback(Ref* pSender)		// 自摸
{
	CCLOG("- Btn : Hu");
	hide();
	player->ziMo();
}
void PlayMenu::qiZiMoHuCallback(Ref* pSender)
{
	CCLOG("- Btn : qiZiMo");
	hide();
	dispatchMahjongEvent(FLOW_NAME::OPERA_ZIMO_END, NULL);
}

void PlayMenu::dianPaoCallback(Ref* pSender)	// 点炮
{
	CCLOG("- Btn : DianPao");
	hide();
	player->dianPao();
	dispatchMahjongEvent(FLOW_NAME::OPERA_DIANPAO_END, NULL);
}
void PlayMenu::qiDianPaoCallback(Ref* pSender)
{
	CCLOG("- Btn : qiDianPao");
	hide();
	dispatchMahjongEvent(OPERA_DIANPAO_END, NULL);
}



void PlayMenu::getPlayer(Player* const player)
{
	this->player = player;
}